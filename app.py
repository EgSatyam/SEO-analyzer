import streamlit as st
from fpdf import FPDF
import base64
import textstat
from textblob import TextBlob
import re
from collections import Counter

st.set_page_config(page_title="SEO Analyzer by Satyam", layout="centered")

st.markdown("""
    <style>
        body {
            background-color: #eef2f7;
            font-family: 'Segoe UI', sans-serif;
        }
        .main {
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
            max-width: 900px;
            margin: auto;
        }
        .title {
            text-align: center;
            font-size: 3em;
            font-weight: 800;
            color: #1a73e8;
            margin-bottom: 15px;
        }
        .footer {
            text-align: center;
            font-size: 0.9em;
            color: gray;
            margin-top: 30px;
        }
        .button-style button {
            background-color: #1a73e8;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            font-size: 16px;
            transition: background 0.3s ease;
        }
        .button-style button:hover {
            background-color: #1666c1;
        }
    </style>
""", unsafe_allow_html=True)

st.markdown('<div class="main">', unsafe_allow_html=True)

st.markdown("<div class='title'>üîç SEO Analyzer Web App</div>", unsafe_allow_html=True)

st.write("""
Welcome to the SEO Analyzer! ‚ú® Paste your text (blog, caption, article, etc.) below and receive insights to boost SEO, readability, and emotional impact.
""")

user_input = st.text_area("‚úèÔ∏è Enter your text:", height=250)

# Keyword extraction function
def extract_keywords(text):
    words = re.findall(r'\b\w{4,}\b', text.lower())
    stopwords = set([
        'this', 'that', 'with', 'have', 'your', 'from', 'about', 'there', 'their', 'they', 'which', 'would',
        'could', 'should', 'because', 'what', 'when', 'where', 'will', 'them', 'been', 'into', 'some', 'more'
    ])
    filtered = [w for w in words if w not in stopwords]
    return [word for word, _ in Counter(filtered).most_common(10)]

# PDF Generator
def generate_pdf(text, keywords, readability, sentiment, seo_score):
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=12)

    pdf.multi_cell(0, 10, "SEO Analysis Report", align='C')
    pdf.ln()

    pdf.multi_cell(0, 10, f"Original Text:\n{text}")
    pdf.ln()

    pdf.multi_cell(0, 10, f"Recommended Keywords:\n{', '.join(keywords)}")
    pdf.ln()

    pdf.cell(0, 10, f"Readability Score: {readability}", ln=True)
    pdf.cell(0, 10, f"Sentiment: {sentiment}", ln=True)
    pdf.cell(0, 10, f"SEO Score: {seo_score}", ln=True)
    pdf.ln()

    pdf.cell(0, 10, "Report generated by: Satyam Sahu", ln=True, align='R')
    return pdf.output(dest='S')

    return pdf_bytes

if st.button("üöÄ Analyze Text", type="primary") and user_input:
    keywords = extract_keywords(user_input)
    readability_score = textstat.flesch_reading_ease(user_input)
    sentiment_result = TextBlob(user_input).sentiment.polarity
    seo_score = min(100, max(0, int(readability_score + sentiment_result * 20 + len(keywords) * 2)))

    st.subheader("üìä SEO Insights")
    st.markdown(f"**Readability Score:** {readability_score:.2f}")
    st.markdown(f"**Sentiment Polarity:** {'Positive' if sentiment_result > 0 else 'Negative' if sentiment_result < 0 else 'Neutral'}")
    st.markdown(f"**SEO Score:** {seo_score}/100")

    st.subheader("üîë Suggested Keywords")
    for word in keywords:
        if st.button(f"‚ûï Insert '{word}'"):
            user_input += f" {word}"
            st.experimental_rerun()

    st.subheader("üì• Export SEO Report")
    try:
        pdf_bytes = generate_pdf(user_input, keywords, readability_score, 'Positive' if sentiment_result > 0 else 'Negative' if sentiment_result < 0 else 'Neutral', seo_score)
        b64 = base64.b64encode(pdf_bytes).decode()
        href = f'<a href="data:application/octet-stream;base64,{b64}" download="SEO_Report_Satyam.pdf">üìÑ Click here to download PDF</a>'
        st.markdown(href, unsafe_allow_html=True)
    except Exception as e:
        st.error(f"PDF generation failed: {e}")

st.markdown('</div>', unsafe_allow_html=True)

st.markdown('<div class="footer">Made with ‚ù§Ô∏è by Satyam Sahu</div>', unsafe_allow_html=True)
